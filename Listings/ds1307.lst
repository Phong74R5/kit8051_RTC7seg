C51 COMPILER V9.60.7.0   DS1307                                                            09/30/2024 13:03:38 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE DS1307
OBJECT MODULE PLACED IN .\Objects\ds1307.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ds1307.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\ds
                    -1307.lst) TABS(2) OBJECT(.\Objects\ds1307.obj)

line level    source

   1          
   2          #include<reg51.h> 
   3          #include "ds1307.h"
   4          #include "i2c.h"
   5          #include "delay.h"
   6           
   7           
   8           
   9          /* Below given values are fixed and should not be changed.
  10              Refer Ds1307 DataSheet for more info*/
  11           
  12          #define DS1307_ID 0xD0     // ds1307 ID
  13           
  14          #define SEC_ADDRESS   0x00 // address to access ds1307 SEC register
  15          #define DATE_ADDRESS  0x04 // address to access ds1307 DATE register
  16          #define control       0x07 // address to access ds1307 CONTROL register
  17           
  18           
  19           
  20           
  21           
  22           
  23          //ds1307 initilization
  24          void ds1307_Init()
  25          {
  26   1          i2c_Start();            // Start i2c communication
  27   1       
  28   1          ds1307_Write(DS1307_ID);   
  29   1          ds1307_Write(control);    
  30   1       
  31   1          ds1307_Write(0x00);        
  32   1       
  33   1          i2c_Stop();             
  34   1       
  35   1       }
  36           
  37          
  38          void ds1307_Write(unsigned char dat)
  39          {
  40   1          i2c_Write(dat);   
  41   1          i2c_Clock();
  42   1       }
  43           
  44          
  45          unsigned char ds1307_Read()
  46          {
  47   1          unsigned char dat;
  48   1          dat = i2c_Read();   
  49   1          return(dat);
  50   1       }
  51          
  52          void ds1307_SetTime(unsigned char hh, unsigned char mm, unsigned char ss)
  53          {
  54   1          i2c_Start();            // Start i2c communication
C51 COMPILER V9.60.7.0   DS1307                                                            09/30/2024 13:03:38 PAGE 2   

  55   1       
  56   1          ds1307_Write(DS1307_ID);    
  57   1          ds1307_Write(SEC_ADDRESS);
  58   1          ds1307_Write(ss);           
  59   1          ds1307_Write(mm);           
  60   1          ds1307_Write(hh);           
  61   1       
  62   1          i2c_Stop();             // Stop i2c communication after Setting the Time
  63   1      }
  64          
  65          void ds1307_SetTimeAuto(void)
  66          {
  67   1          i2c_Start();            // Start i2c communication
  68   1       
  69   1          ds1307_Write(DS1307_ID);    
  70   1          ds1307_Write(SEC_ADDRESS);
  71   1        
  72   1          i2c_Stop();             // Stop i2c communication after Setting the Time
  73   1      }
  74          
  75          void ds1307_SetDate(unsigned char dd, unsigned char mm, unsigned char yy)
  76          {
  77   1          i2c_Start();            // Start i2c communication
  78   1       
  79   1          ds1307_Write(DS1307_ID);    
  80   1          ds1307_Write(DATE_ADDRESS);     
  81   1       
  82   1          ds1307_Write(dd);           
  83   1          ds1307_Write(mm);           
  84   1          ds1307_Write(yy);           
  85   1       
  86   1          i2c_Stop();             // Stop i2c communication after Setting the Date
  87   1      }
  88          
  89          void ds1307_SetDateAuto(void)
  90          {
  91   1          i2c_Start();            // Start i2c communication
  92   1       
  93   1          ds1307_Write(DS1307_ID);    
  94   1          ds1307_Write(DATE_ADDRESS);     
  95   1          i2c_Stop();             // Stop i2c communication after Setting the Date
  96   1      }
  97          
  98          void ds1307_GetTime(unsigned char *h_ptr,unsigned char *m_ptr,unsigned char *s_ptr)
  99          {
 100   1           i2c_Start();           // Start i2c communication
 101   1       
 102   1          ds1307_Write(DS1307_ID);    
 103   1          ds1307_Write(SEC_ADDRESS);          
 104   1       
 105   1           i2c_Stop();            
 106   1       
 107   1          i2c_Start();               
 108   1          ds1307_Write(0xD1);         
 109   1                                     
 110   1       
 111   1        *s_ptr = ds1307_Read();  i2c_Ack();     
 112   1        *m_ptr = ds1307_Read();  i2c_Ack();     
 113   1        *h_ptr = ds1307_Read();  i2c_NoAck();   
 114   1       
 115   1        i2c_Stop();               // stop i2c communication after reading the Time
 116   1       }
C51 COMPILER V9.60.7.0   DS1307                                                            09/30/2024 13:03:38 PAGE 3   

 117           
 118          void ds1307_GetDate(unsigned char *d_ptr,unsigned char *m_ptr,unsigned char *y_ptr)
 119          {
 120   1          i2c_Start();            // start i2c communication
 121   1       
 122   1          ds1307_Write(DS1307_ID);    
 123   1          ds1307_Write(DATE_ADDRESS);     
 124   1       
 125   1          i2c_Stop();             
 126   1       
 127   1       
 128   1         i2c_Start();             
 129   1         ds1307_Write(0xD1);          
 130   1                                  
 131   1       
 132   1        *d_ptr = ds1307_Read(); i2c_Ack();     
 133   1        *m_ptr = ds1307_Read(); i2c_Ack();     
 134   1        *y_ptr = ds1307_Read(); i2c_NoAck();   
 135   1       
 136   1        i2c_Stop();         // stop i2c communication after reading the Time
 137   1       }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    298    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      24
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
