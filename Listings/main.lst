C51 COMPILER V9.60.7.0   MAIN                                                              10/01/2024 13:13:06 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          //Le Hong Phong - 22119210
   2          #include <reg51.h>   
   3          #define Display P0
   4          #define chonLED P2      
   5          sbit SCLK = P3^6;
   6          sbit IO = P3^4;
   7          sbit CE = P3^5;
   8          char CHEDO = 1;
   9          sbit SW = P3^3;
  10          
  11          unsigned char code Code7segCatot[] = {0x3f, 0x06, 0x5b, 0x4f, 0x66, 0x6d,
  12                                               0x7d, 0x07, 0x7f, 0x6f, 0x77};
  13          //thu tu: giay phut gio nam thang ngay                  
  14          unsigned char Time[6] = {0x10, 0x16, 0x23, 0x24, 0x10, 0x01};
  15          
  16          
  17          // RTC Register Map (Dia chi, Doc/Ghi, Bit, Pham vi)
  18          
  19          // 81h-80h: Giay (00-59)
  20          // Bit 7: CH (Clock Halt), Bit 6: 10s, Bits 5-0: Giay
  21          
  22          // 83h-82h: Phut (00-59)
  23          // Bit 6: 10m, Bits 5-0: Phut
  24          
  25          // 85h-84h: Gio (1-12/0-23)
  26          // Bit 7: 12/24, Bit 6: AM/PM, Bit 5: 10h, Bits 4-0: Gio
  27          
  28          // 87h-86h: Ngay (1-31)
  29          // Bit 5: 10d, Bits 4-0: Ngay
  30          
  31          // 89h-88h: Thang (1-12)
  32          // Bit 4: 10m, Bits 3-0: Thang
  33          
  34          // 8Bh-8Ah: Thu (1-7)
  35          // Bits 2-0: Thu
  36          
  37          // 8Dh-8Ch: Nam (00-99)
  38          // Bit 7: 10y, Bits 6-0: Nam
  39          
  40          // 8Fh-8Eh: Thanh ghi trang thai
  41          // Bit 7: WP (Write Protect)
  42          
  43          // 91h-90h: Thanh ghi dieu khien
  44          // Bits 7-4: TCS, Bits 3-2: DS, Bits 1-0: RS
  45          
  46          
  47          unsigned char READ[6] = {0x81,0x83,0x85,0x8D,0x89,0x87};
  48          unsigned char WRITE[6] = {0x80,0x82,0x84,0x8C,0x88,0x86};
  49          /*******************************************************************************************************/
  50          // Ham tao do tre bang us
  51          void delay_us(unsigned int us_count)
  52          {  
  53   1        while(us_count!=0)
  54   1        {
C51 COMPILER V9.60.7.0   MAIN                                                              10/01/2024 13:13:06 PAGE 2   

  55   2          us_count--;
  56   2        }
  57   1      }
  58          /*******************************************************************************************************/
  59          // Doc du lieu tu RTC
  60          unsigned char RTC_READ(unsigned char add)
  61          {
  62   1        unsigned char dat, temp, i;
  63   1        CE = 1; // Kich hoat CE
  64   1        SCLK = 0;
  65   1        delay_us(1);
  66   1        for(i = 0;i<8;i++) // Gui dia chi
  67   1        {
  68   2          IO = add & 0x01;
  69   2          add >>= 1;
  70   2          SCLK = 1;
  71   2          delay_us(1);
  72   2          SCLK = 0;
  73   2          delay_us(1);
  74   2        }
  75   1        for(i = 0;i<8;i++) // Nhan du lieu
  76   1        {
  77   2          temp = IO;
  78   2          dat = (dat>>1)|(temp<<7);
  79   2          SCLK = 1;
  80   2          delay_us(1);
  81   2          SCLK = 0;
  82   2          delay_us(1);
  83   2        }
  84   1        delay_us(1);
  85   1        CE = 0; // Tat CE
  86   1        return dat;
  87   1      }
  88          
  89          // Ghi du lieu vao RTC
  90          void RTC_WRITE(unsigned char add, unsigned char dat)
  91          {
  92   1        unsigned char i;
  93   1        CE = 1; // Kich hoat CE
  94   1        SCLK = 0;
  95   1        delay_us(1);
  96   1        for(i = 0;i<8;i++) // Gui dia chi
  97   1        {
  98   2          IO = add & 0x01;
  99   2          add >>= 1;
 100   2          SCLK = 1;
 101   2          delay_us(1);
 102   2          SCLK = 0;
 103   2          delay_us(1);
 104   2        }
 105   1        for(i = 0;i<8;i++) // Gui du lieu
 106   1        {
 107   2          IO = dat & 0x01;
 108   2          dat >>= 1;
 109   2          SCLK = 1;
 110   2          delay_us(1);
 111   2          SCLK = 0;
 112   2          delay_us(1);
 113   2        }
 114   1        delay_us(1);
 115   1        CE = 0; // Tat CE
 116   1      }
C51 COMPILER V9.60.7.0   MAIN                                                              10/01/2024 13:13:06 PAGE 3   

 117          
 118          // Cai dat thoi gian cho RTC
 119          void SetRTC()
 120          {
 121   1        unsigned char i;
 122   1        RTC_WRITE(0x8e, 0x00); // Tat che do bao ve ghi
 123   1        for(i = 0;i< 6;i++)
 124   1        {
 125   2          RTC_WRITE(WRITE[i],Time[i]); // Ghi thoi gian
 126   2        }
 127   1        RTC_WRITE(0x8e, 0x80); // Bat lai che do bao ve ghi
 128   1      }
 129          
 130          // Lay thoi gian tu RTC
 131          void GetRTC()
 132          {
 133   1        char i;
 134   1        for(i = 0;i<6;i++)
 135   1        {
 136   2          Time[i] = RTC_READ(READ[i]); // Doc thoi gian
 137   2        }
 138   1      }
 139          /*********************************************************************************************************
             -*/
 140          // Hien thi thoi gian
 141          void HienThi(unsigned char *Time, unsigned char chedo) {
 142   1        unsigned char i, range;
 143   1        // range = 0: hien thi gio; range = 3: hien thi ngay
 144   1        if(chedo)
 145   1          range = 0;
 146   1        else
 147   1          range = 3;
 148   1      
 149   1        for(i = 0;i<7;i+=3) // Hien thi chu so hang chuc va don vi
 150   1        {
 151   2          chonLED = ((unsigned char)(i)<<2);
 152   2          Display = Code7segCatot[Time[i/3 + range] & 0x0f];
 153   2          delay_us(100);
 154   2          chonLED = ((unsigned char)(i+1)<<2);
 155   2          Display = Code7segCatot[(Time[i/3 + range]>>4) & 0x0f];
 156   2          delay_us(100);
 157   2        }
 158   1        // Hien thi dau gach ngang
 159   1        chonLED = ((unsigned char)(2)<<2);
 160   1        Display = 0x40;
 161   1        delay_us(100);
 162   1        chonLED = ((unsigned char)(5)<<2);
 163   1        Display = 0x40;
 164   1        delay_us(100);
 165   1      }
 166          /*******************************************************************************************************/
 167          // Khoi tao ngat Timer0
 168          void Interrupt_Timer0(void) {
 169   1        TMOD = 0x01; // Chon che do 1
 170   1        TH0 = 0xFC;  // Gia tri ban dau cua thanh ghi TH0
 171   1        TL0 = 0x18;  // Gia tri ban dau cua thanh ghi TL0
 172   1        ET0 = 1;     // Cho phep ngat Timer 0
 173   1        EA = 1;      // Cho phep ngat toan cuc
 174   1        TR0 = 1;     // Bat Timer 0
 175   1      }
 176          
 177          // Ham xu ly ngat Timer
C51 COMPILER V9.60.7.0   MAIN                                                              10/01/2024 13:13:06 PAGE 4   

 178          void ISR_TIMER(void) interrupt 1 { 
 179   1        if (ET0 == 1) {
 180   2          if (SW == 0) { // Neu nut bam duoc nhan
 181   3            delay_us(100);
 182   3            if (SW == 0) {
 183   4              CHEDO++; // Thay doi che do hien thi
 184   4            }
 185   3            if (CHEDO > 1)
 186   3              CHEDO = 0;
 187   3          }
 188   2          TH0 = 0xFC; // Khoi phuc gia tri ban dau cua Timer
 189   2          TL0 = 0x18;
 190   2        }
 191   1      }
 192          /*******************************************************************************************************/
 193          // Chuong trinh chinh
 194          void main() 
 195          {
 196   1        SetRTC();           // Cai dat RTC
 197   1        Interrupt_Timer0(); // Khoi tao ngat Timer0
 198   1        
 199   1        // Hien thi thoi gian va ngay lien tuc
 200   1        while(1)
 201   1        {
 202   2          GetRTC();           // Lay thoi gian tu RTC
 203   2          HienThi(Time, CHEDO); // Hien thi thoi gian len LED 7 doan
 204   2        }
 205   1      }
 206          /*******************************************************************************************************/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    421    ----
   CONSTANT SIZE    =     11    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     19       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
